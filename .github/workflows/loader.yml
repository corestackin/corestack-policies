##### This is a workflow to load policies to corestack marketplace
# Author: Karthick <karthick.k@corestack.io>
#


name: DEV-CI
on:
  push:
    branches: [ master ]
    paths:
    - 'AWS/**'
    - 'Azure/**'
    - 'Oracle/**'
    - 'GCP/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'AWS/**'
      - 'Azure/**'
      - 'Oracle/**'
      - 'GCP/**'
jobs:
  build:
    # Skip running this workflow if commit message has "***NO_CI***" or "[skip ci]" or "[ci skip]"
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v1
    #  with: # for testing
    #    ref: '668569b8abc518c2b16eda159bf466868e066d39' # for testing
    - name: Get Committer Email
      run: |
        AUTHOR=`git show HEAD|grep Author|head -1|awk '{print $NF}'|tr -d '<'|tr -d '>'`
        echo $AUTHOR
        if [ "`echo $AUTHOR|grep users.noreply.github.com`" != "" ]
        then
          AUTHOR="no" 
          export AUTHOR
          echo "AUTHOR=$AUTHOR" >> $GITHUB_ENV
        else
          export AUTHOR
          echo "AUTHOR=$AUTHOR" >> $GITHUB_ENV
        fi
    - name: Install pre-requisites
      run: |
        sudo apt update
        sudo apt install jsonlint jq python2.7-minimal python-pip python-yaml -y
        sudo pip install httplib2 pandas
    - name: Get list of modified/added files
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE
        # git diff-tree --no-commit-id --name-only -r  61e44bb3861f02b6c872d53c5a207db5ab362076 | tee $HOME/files_added # for testing
        git diff-tree --no-commit-id --name-only -r HEAD | tee $HOME/files_added # for live
    - name: Validate JSON file
      run: |
        echo "Validating JSON files ..."
        for file in `cat $HOME/files_added`
        do
          if [[ -f $GITHUB_WORKSPACE/$file && "`echo $file|awk -F. '{print $NF}'`" == "json" || "`echo $file|awk -F. '{print $NF}'`" == "JSON" ]]
          then
            jsonlint-php $GITHUB_WORKSPACE/$file
          fi
        done
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Process and Load Policies
      shell: bash
      env:
        REPOUSERNAME: ${{ secrets.GITPOLICYUSER }}
        REPOKEY: ${{ secrets.GITPOLICYPASSWORD }}
        PAT: ${{ secrets.GITPOLICYPASSWORD }}
        COREHOST: ${{ secrets.DEVHOST }}
        COREUSER: ${{ secrets.DEVUSER }}
        COREPASS: ${{ secrets.DEVPASS }}
        GITPASS: ${{ secrets.GIT_SECRET }}
        POLICYSCOPE: ${{ secrets.SCOPE }}
      run: |
        # Determine added/updated policies
        for file in `cat $HOME/files_added`
        do 
          echo $file|rev |cut -d "/" -f 2- | rev
        done|uniq > $HOME/policies_added
        
        added=false
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        # Determine policy type and call appropriate metadata generator function
        cd $GITHUB_WORKSPACE
        for fname in `cat $HOME/policies_added|grep -v .github|grep -v README.md`
        do
          fname=`echo $fname|sed 's/\/$//'`
          wname=$fname
          file=`echo $fname|awk -F/ '{print $NF}'`
          fname=$GITHUB_WORKSPACE/$fname
          echo "Determined policy path: $fname"	
          # Start to upload the policy
          if [ -d $fname ]
          then
            if [ `jq 'select(.content_branch == "master")' $fname/$file.json | wc -l` -gt 0 ]
            then
            jq '.content_branch="qa"' $fname/$file.json > "$fname/$file"_tmp.json; mv "$fname/$file"_tmp.json $fname/$file.json
            git add "$fname/$file".json
            added=true
            else
            echo "No change in metadata"
            fi
            echo "Uploading Policy ..."
            sudo /usr/bin/python2.7 $GITHUB_WORKSPACE/.github/scripts/resource_loader.py http://$COREHOST:18080/v1 $COREUSER $COREPASS policy $fname/ A -s $POLICYSCOPE --update
          fi          
        done
        if [ "$added" == "true" ]
        then
        git diff-index --quiet HEAD || git commit -m "updated by github workflow"
